/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BattlePass, BattlePassInterface } from "../BattlePass";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "amountForDevs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountForSaleAndDev",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "uint32",
        name: "whitelistSaleStartTime",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "publicSaleStartTime",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "priceWei",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "whitelistSigner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOwnershipData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
        ],
        internalType: "struct ERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    name: "isSaleOn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerAddressDuringMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
    ],
    name: "setPublicSaleConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "setWhitelistSaleConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "price",
        type: "uint64",
      },
    ],
    name: "setWhitelistSaleConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPerWhitelistDuringMint",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620032903803806200329083398101604081905262000035916200027d565b81816200004233620000ba565b8151620000579060039060208501906200010a565b5080516200006d9060049060208401906200010a565b50600060019081556009555050600260805250506103e860c0819052606460a05260056101005260e052600a8054600160401b600160801b03191664b1a2bc2ec560511b17905562000323565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200011890620002e7565b90600052602060002090601f0160209004810192826200013c576000855562000187565b82601f106200015757805160ff191683800117855562000187565b8280016001018555821562000187579182015b82811115620001875782518255916020019190600101906200016a565b506200019592915062000199565b5090565b5b808211156200019557600081556001016200019a565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001d857600080fd5b81516001600160401b0380821115620001f557620001f5620001b0565b604051601f8301601f19908116603f01168101908282118183101715620002205762000220620001b0565b816040528381526020925086838588010111156200023d57600080fd5b600091505b8382101562000261578582018301518183018401529082019062000242565b83821115620002735760008385830101525b9695505050505050565b600080604083850312156200029157600080fd5b82516001600160401b0380821115620002a957600080fd5b620002b786838701620001c6565b93506020850151915080821115620002ce57600080fd5b50620002dd85828601620001c6565b9150509250929050565b600181811c90821680620002fc57607f821691505b6020821081036200031d57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051612efe6200039260003960008181610eab01528181610f4a0152610f820152600061112d01526000818161061801526114e70152600081816107080152610dfb0152600081816104dd015281816111b401526115ba0152612efe6000f3fe6080604052600436106102195760003560e01c80638bc35c2f1161011d578063b88d4fde116100b0578063e985e9c51161007f578063f2fde38b11610064578063f2fde38b146106d6578063fbe1aa51146106f6578063ff66aa221461072a57600080fd5b8063e985e9c51461067a578063ec596b72146106c357600080fd5b8063b88d4fde146105e6578063ba313ca714610606578063c87b56dd1461063a578063dc33e6811461065a57600080fd5b806398d5fdca116100ec57806398d5fdca14610589578063a0712d681461059e578063a22cb465146105b1578063a2309ff8146105d157600080fd5b80638bc35c2f146104cb5780638da5cb5b146104ff5780639231ab2a1461051d57806395d89b411461057457600080fd5b806342842e0e116101b05780636e8cfade1161017f578063715018a611610164578063715018a61461040757806379502c551461041c578063819b25ba146104ab57600080fd5b80636e8cfade146103c757806370a08231146103e757600080fd5b806342842e0e1461034757806355f804b3146103675780636352211e146103875780636b12304e146103a757600080fd5b8063095ea7b3116101ec578063095ea7b3146102cf57806318160ddd146102ef57806323b872dd146103125780633ccfd60b1461033257600080fd5b8063019b14631461021e57806301ffc9a71461024057806306fdde0314610275578063081812fc14610297575b600080fd5b34801561022a57600080fd5b5061023e610239366004612816565b61074a565b005b34801561024c57600080fd5b5061026061025b366004612847565b6107d1565b60405190151581526020015b60405180910390f35b34801561028157600080fd5b5061028a61086e565b60405161026c91906128bc565b3480156102a357600080fd5b506102b76102b23660046128cf565b610900565b6040516001600160a01b03909116815260200161026c565b3480156102db57600080fd5b5061023e6102ea3660046128ff565b61095d565b3480156102fb57600080fd5b50600254600154035b60405190815260200161026c565b34801561031e57600080fd5b5061023e61032d366004612929565b610a1c565b34801561033e57600080fd5b5061023e610a27565b34801561035357600080fd5b5061023e610362366004612929565b610b78565b34801561037357600080fd5b5061023e610382366004612965565b610b93565b34801561039357600080fd5b506102b76103a23660046128cf565b610bf9565b3480156103b357600080fd5b506102606103c23660046129d7565b610c0b565b3480156103d357600080fd5b5061023e6103e23660046129f9565b610c2e565b3480156103f357600080fd5b50610304610402366004612a2c565b610cd1565b34801561041357600080fd5b5061023e610d39565b34801561042857600080fd5b50600a54600b5461046b9163ffffffff8082169264010000000083049091169168010000000000000000900467ffffffffffffffff16906001600160a01b031684565b6040805163ffffffff958616815294909316602085015267ffffffffffffffff909116918301919091526001600160a01b0316606082015260800161026c565b3480156104b757600080fd5b5061023e6104c63660046128cf565b610d9f565b3480156104d757600080fd5b506103047f000000000000000000000000000000000000000000000000000000000000000081565b34801561050b57600080fd5b506000546001600160a01b03166102b7565b34801561052957600080fd5b5061053d6105383660046128cf565b610fb8565b6040805182516001600160a01b0316815260208084015167ffffffffffffffff16908201529181015115159082015260600161026c565b34801561058057600080fd5b5061028a610fde565b34801561059557600080fd5b50610304610fed565b61023e6105ac3660046128cf565b61105e565b3480156105bd57600080fd5b5061023e6105cc366004612a47565b611251565b3480156105dd57600080fd5b50600154610304565b3480156105f257600080fd5b5061023e610601366004612b26565b6112ff565b34801561061257600080fd5b506103047f000000000000000000000000000000000000000000000000000000000000000081565b34801561064657600080fd5b5061028a6106553660046128cf565b611350565b34801561066657600080fd5b50610304610675366004612a2c565b6113ec565b34801561068657600080fd5b50610260610695366004612b8e565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b61023e6106d1366004612baa565b611420565b3480156106e257600080fd5b5061023e6106f1366004612a2c565b61172b565b34801561070257600080fd5b506103047f000000000000000000000000000000000000000000000000000000000000000081565b34801561073657600080fd5b5061023e610745366004612bfa565b61180d565b6000546001600160a01b031633146107a95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600a805463ffffffff9092166401000000000267ffffffff0000000019909216919091179055565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061083457506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061086857507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606003805461087d90612c24565b80601f01602080910402602001604051908101604052809291908181526020018280546108a990612c24565b80156108f65780601f106108cb576101008083540402835291602001916108f6565b820191906000526020600020905b8154815290600101906020018083116108d957829003601f168201915b5050505050905090565b600061090b826118ae565b610941576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b600061096882610bf9565b9050806001600160a01b0316836001600160a01b0316036109b5576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600160a01b038216148015906109d557506109d38133610695565b155b15610a0c576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a178383836118da565b505050565b610a17838383611943565b6000546001600160a01b03163314610a815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a0565b600260095403610ad35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a0565b6002600955604051600090339047908381818185875af1925050503d8060008114610b1a576040519150601f19603f3d011682016040523d82523d6000602084013e610b1f565b606091505b5050905080610b705760405162461bcd60e51b815260206004820152601060248201527f5472616e73666572206661696c65642e0000000000000000000000000000000060448201526064016107a0565b506001600955565b610a17838383604051806020016040528060008152506112ff565b6000546001600160a01b03163314610bed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a0565b610a17600c8383612769565b6000610c0482611b7f565b5192915050565b60008215801590610c1b57508115155b8015610c275750814210155b9392505050565b6000546001600160a01b03163314610c885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a0565b600a805463ffffffff191663ffffffff9390931692909217909155600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b60006001600160a01b038216610d13576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b6000546001600160a01b03163314610d935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a0565b610d9d6000611cb4565b565b6000546001600160a01b03163314610df95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a0565b7f000000000000000000000000000000000000000000000000000000000000000081610e286002546001540390565b610e329190612c74565b1115610ea65760405162461bcd60e51b815260206004820152602760248201527f746f6f206d616e7920616c7265616479206d696e746564206265666f7265206460448201527f6576206d696e740000000000000000000000000000000000000000000000000060648201526084016107a0565b610ed07f000000000000000000000000000000000000000000000000000000000000000082612ca2565b15610f435760405162461bcd60e51b815260206004820152602c60248201527f63616e206f6e6c79206d696e742061206d756c7469706c65206f66207468652060448201527f6d6178426174636853697a65000000000000000000000000000000000000000060648201526084016107a0565b6000610f6f7f000000000000000000000000000000000000000000000000000000000000000083612cb6565b905060005b81811015610a1757610fa6337f0000000000000000000000000000000000000000000000000000000000000000611d11565b80610fb081612cca565b915050610f74565b604080516060810182526000808252602082018190529181019190915261086882611b7f565b60606004805461087d90612c24565b600a54600090640100000000900463ffffffff161580159061101f5750600a544264010000000090910463ffffffff16105b156110415750600a5468010000000000000000900467ffffffffffffffff1690565b50600a5468010000000000000000900467ffffffffffffffff1690565b3233146110ad5760405162461bcd60e51b815260206004820152601e60248201527f5468652063616c6c657220697320616e6f7468657220636f6e7472616374000060448201526064016107a0565b600a5468010000000000000000810467ffffffffffffffff1690640100000000900463ffffffff166110df8282610c0b565b61112b5760405162461bcd60e51b815260206004820152601660248201527f73616c6520686173206e6f7420626567756e207965740000000000000000000060448201526064016107a0565b7f00000000000000000000000000000000000000000000000000000000000000008361115a6002546001540390565b6111649190612c74565b11156111b25760405162461bcd60e51b815260206004820152601260248201527f72656163686564206d617820737570706c79000000000000000000000000000060448201526064016107a0565b7f0000000000000000000000000000000000000000000000000000000000000000836111dd336113ec565b6111e79190612c74565b11156112355760405162461bcd60e51b815260206004820152601660248201527f63616e206e6f74206d696e742074686973206d616e790000000000000000000060448201526064016107a0565b61123f3384611d11565b610a1761124c8484612ce3565b611d2f565b336001600160a01b03831603611293576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61130a848484611943565b6001600160a01b0383163b1515801561132c575061132a84848484611dbd565b155b1561134a576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061135b826118ae565b611391576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061139b611ea9565b905080516000036113bb5760405180602001604052806000815250610c27565b806113c584611eb8565b6040516020016113d6929190612d02565b6040516020818303038152906040529392505050565b6001600160a01b03811660009081526006602052604081205468010000000000000000900467ffffffffffffffff16610868565b32331461146f5760405162461bcd60e51b815260206004820152601e60248201527f5468652063616c6c657220697320616e6f7468657220636f6e7472616374000060448201526064016107a0565b600a5467ffffffffffffffff680100000000000000008204169063ffffffff166114998282610c0b565b6114e55760405162461bcd60e51b815260206004820181905260248201527f77686974656c6973742073616c6520686173206e6f7420626567756e2079657460448201526064016107a0565b7f0000000000000000000000000000000000000000000000000000000000000000856115146002546001540390565b61151e9190612c74565b11156115b85760405162461bcd60e51b815260206004820152604560248201527f6e6f7420656e6f7567682072656d61696e696e6720726573657276656420666f60448201527f722073616c6520746f20737570706f72742064657369726564206d696e74206160648201527f6d6f756e74000000000000000000000000000000000000000000000000000000608482015260a4016107a0565b7f000000000000000000000000000000000000000000000000000000000000000084111580156115fb575083856115ee336113ec565b6115f89190612c74565b11155b6116475760405162461bcd60e51b815260206004820152601660248201527f63616e206e6f74206d696e742074686973206d616e790000000000000000000060448201526064016107a0565b600061165233611fb9565b61165b86611eb8565b60405160200161166c929190612d31565b6040516020818303038152906040529050600061168882612154565b90506000611696828761218f565b600b549091506001600160a01b038083169116146116f65760405162461bcd60e51b815260206004820152600960248201527f77726f6e6720736967000000000000000000000000000000000000000000000060448201526064016107a0565b600088611701610fed565b61170b9190612ce3565b9050611717338a611d11565b61172081611d2f565b505050505050505050565b6000546001600160a01b031633146117855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a0565b6001600160a01b0381166118015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107a0565b61180a81611cb4565b50565b6000546001600160a01b031633146118675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a0565b600a805467ffffffffffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff909216919091179055565b600060015482108015610868575050600090815260056020526040902054600160e01b900460ff161590565b600082815260076020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061194e82611b7f565b9050836001600160a01b031681600001516001600160a01b03161461199f576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000336001600160a01b03861614806119bd57506119bd8533610695565b806119d85750336119cd84610900565b6001600160a01b0316145b905080611a11576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038416611a51576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a5d600084876118da565b6001600160a01b038581166000908152600660209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600590945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611b33576001548214611b33578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b604080516060810182526000808252602082018190529181019190915281600154811015611c8257600081815260056020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff16151591810182905290611c805780516001600160a01b031615611c16579392505050565b5060001901600081815260056020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215611c7b579392505050565b611c16565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611d2b8282604051806020016040528060008152506121b3565b5050565b80341015611d7f5760405162461bcd60e51b815260206004820152601660248201527f4e65656420746f2073656e64206d6f7265204554482e0000000000000000000060448201526064016107a0565b8034111561180a57336108fc611d958334612d89565b6040518115909202916000818181858888f19350505050158015611d2b573d6000803e3d6000fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611df2903390899088908890600401612da0565b6020604051808303816000875af1925050508015611e2d575060408051601f3d908101601f19168201909252611e2a91810190612ddc565b60015b611e8b573d808015611e5b576040519150601f19603f3d011682016040523d82523d6000602084013e611e60565b606091505b508051600003611e83576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600c805461087d90612c24565b606081600003611edf5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f095780611ef381612cca565b9150611f029050600a83612cb6565b9150611ee3565b60008167ffffffffffffffff811115611f2457611f24612a83565b6040519080825280601f01601f191660200182016040528015611f4e576020820181803683370190505b5090505b8415611ea157611f63600183612d89565b9150611f70600a86612ca2565b611f7b906030612c74565b60f81b818381518110611f9057611f90612df9565b60200101906001600160f81b031916908160001a905350611fb2600a86612cb6565b9450611f52565b60408051602a8082526060828101909352600091906020820181803683370190505090506000839050600360fc1b82600081518110611ffa57611ffa612df9565b60200101906001600160f81b031916908160001a9053507f58000000000000000000000000000000000000000000000000000000000000008260018151811061204557612045612df9565b60200101906001600160f81b031916908160001a90535060005b601481101561214b576000612075826013612d89565b612080906008612ce3565b6001600160a01b038416901c9050600f600482901c1660006120a560f0841684612e0f565b90506120b0826121c0565b866120bc866002612ce3565b6120c7906002612c74565b815181106120d7576120d7612df9565b60200101906001600160f81b031916908160001a9053506120f7816121c0565b86612103866002612ce3565b61210e906003612c74565b8151811061211e5761211e612df9565b60200101906001600160f81b031916908160001a905350505050808061214390612cca565b91505061205f565b50909392505050565b60006121608251611eb8565b82604051602001612172929190612e32565b604051602081830303815290604052805190602001209050919050565b600080600061219e85856121f2565b915091506121ab81612260565b509392505050565b610a178383836001612416565b6000600a8260ff1610156121e2576121d9826030612e8d565b60f81b92915050565b6121d9826037612e8d565b919050565b60008082516041036122285760208301516040840151606085015160001a61221c8782858561262a565b94509450505050612259565b82516040036122515760208301516040840151612246868383612717565b935093505050612259565b506000905060025b9250929050565b600081600481111561227457612274612eb2565b0361227c5750565b600181600481111561229057612290612eb2565b036122dd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107a0565b60028160048111156122f1576122f1612eb2565b0361233e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107a0565b600381600481111561235257612352612eb2565b036123aa5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107a0565b60048160048111156123be576123be612eb2565b0361180a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107a0565b6001546001600160a01b038516612459576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600003612493576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516600081815260066020908152604080832080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600590925290912080546001600160e01b031916909217600160a01b42909216919091021790558080850183801561255457506001600160a01b0387163b15155b156125dc575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46125a56000888480600101955088611dbd565b6125c2576040516368d2bf6b60e11b815260040160405180910390fd5b80820361255a5782600154146125d757600080fd5b612621565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082036125dd575b50600155611b78565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612661575060009050600361270e565b8460ff16601b1415801561267957508460ff16601c14155b1561268a575060009050600461270e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156126de573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166127075760006001925092505061270e565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161274d60ff86901c601b612c74565b905061275b8782888561262a565b935093505050935093915050565b82805461277590612c24565b90600052602060002090601f01602090048101928261279757600085556127dd565b82601f106127b05782800160ff198235161785556127dd565b828001600101855582156127dd579182015b828111156127dd5782358255916020019190600101906127c2565b506127e99291506127ed565b5090565b5b808211156127e957600081556001016127ee565b803563ffffffff811681146121ed57600080fd5b60006020828403121561282857600080fd5b610c2782612802565b6001600160e01b03198116811461180a57600080fd5b60006020828403121561285957600080fd5b8135610c2781612831565b60005b8381101561287f578181015183820152602001612867565b8381111561134a5750506000910152565b600081518084526128a8816020860160208601612864565b601f01601f19169290920160200192915050565b602081526000610c276020830184612890565b6000602082840312156128e157600080fd5b5035919050565b80356001600160a01b03811681146121ed57600080fd5b6000806040838503121561291257600080fd5b61291b836128e8565b946020939093013593505050565b60008060006060848603121561293e57600080fd5b612947846128e8565b9250612955602085016128e8565b9150604084013590509250925092565b6000806020838503121561297857600080fd5b823567ffffffffffffffff8082111561299057600080fd5b818501915085601f8301126129a457600080fd5b8135818111156129b357600080fd5b8660208285010111156129c557600080fd5b60209290920196919550909350505050565b600080604083850312156129ea57600080fd5b50508035926020909101359150565b60008060408385031215612a0c57600080fd5b612a1583612802565b9150612a23602084016128e8565b90509250929050565b600060208284031215612a3e57600080fd5b610c27826128e8565b60008060408385031215612a5a57600080fd5b612a63836128e8565b915060208301358015158114612a7857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612aaa57600080fd5b813567ffffffffffffffff80821115612ac557612ac5612a83565b604051601f8301601f19908116603f01168101908282118183101715612aed57612aed612a83565b81604052838152866020858801011115612b0657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215612b3c57600080fd5b612b45856128e8565b9350612b53602086016128e8565b925060408501359150606085013567ffffffffffffffff811115612b7657600080fd5b612b8287828801612a99565b91505092959194509250565b60008060408385031215612ba157600080fd5b612a15836128e8565b600080600060608486031215612bbf57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115612be457600080fd5b612bf086828701612a99565b9150509250925092565b600060208284031215612c0c57600080fd5b813567ffffffffffffffff81168114610c2757600080fd5b600181811c90821680612c3857607f821691505b602082108103612c5857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612c8757612c87612c5e565b500190565b634e487b7160e01b600052601260045260246000fd5b600082612cb157612cb1612c8c565b500690565b600082612cc557612cc5612c8c565b500490565b600060018201612cdc57612cdc612c5e565b5060010190565b6000816000190483118215151615612cfd57612cfd612c5e565b500290565b60008351612d14818460208801612864565b835190830190612d28818360208801612864565b01949350505050565b60008351612d43818460208801612864565b7f3a000000000000000000000000000000000000000000000000000000000000009083019081528351612d7d816001840160208801612864565b01600101949350505050565b600082821015612d9b57612d9b612c5e565b500390565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612dd26080830184612890565b9695505050505050565b600060208284031215612dee57600080fd5b8151610c2781612831565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff841680821015612e2957612e29612c5e565b90039392505050565b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000815260008351612e6a81601a850160208801612864565b835190830190612e8181601a840160208801612864565b01601a01949350505050565b600060ff821660ff84168060ff03821115612eaa57612eaa612c5e565b019392505050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122089b991acc2336fe5c81263236e133e67b675042980fcbadb543939c77197d84464736f6c634300080d0033";

export class BattlePass__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BattlePass> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<BattlePass>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): BattlePass {
    return super.attach(address) as BattlePass;
  }
  connect(signer: Signer): BattlePass__factory {
    return super.connect(signer) as BattlePass__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattlePassInterface {
    return new utils.Interface(_abi) as BattlePassInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BattlePass {
    return new Contract(address, _abi, signerOrProvider) as BattlePass;
  }
}
